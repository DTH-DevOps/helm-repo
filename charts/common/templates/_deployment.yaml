{{- define "common.deployment" -}}
{{- $common := dict "Values" .Values.common -}}
{{- $noCommon := omit .Values "common" -}}
{{- $overrides := dict "Values" $noCommon -}}
{{- $noValues := omit . "Values" -}}
{{- with merge $noValues $overrides $common -}}
apiVersion: apps/v1
kind: Deployment
{{- include "common.metadata" . }}
  {{- if .Values.annotations }}
  annotations:
  {{- range $key, $value := .Values.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
spec:
  {{- if .Values.updateStrategy }}
  strategy:
  {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
{{- include "common.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if .Values.config }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- end }}
      labels:
{{- include "common.selectorLabels" . | nindent 8 }}
    spec:
      {{- $registrySecret := default .Values.global.imagePullSecrets .Values.imagePullSecrets }}
      {{- if $registrySecret }}
      imagePullSecrets:
        - name: {{ $registrySecret }}
      {{- end }}
      securityContext:
{{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
        {{- if eq "string" (printf "%T" .Values.initContainers) }}
{{ tpl .Values.initContainers . | indent 8 }}
        {{- else }}
{{ toYaml .Values.initContainers | indent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- $repository := default .Values.global.imageRegistry .Values.image.repository }}
          image: "{{ $repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command: {{ .Values.command }}
          {{- end }}
          {{- if .Values.args }}
          args: {{ .Values.args }}
          {{- end }}
          ports:
            {{- range .Values.services -}}
            {{- range $port:= .specs}}
            - name: {{ .name }}
              containerPort: {{ .targetPort | default .port}}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
            {{- end }}
          {{- if .Values.config }}
          envFrom:
            - configMapRef:
                name: {{ include "common.fullname" . }}
          {{- end }}
          volumeMounts:
            {{- if .Values.ephemeralVolume.enabled }}
            - name: {{ .Values.ephemeralVolume.name }}
              mountPath: {{ .Values.ephemeralVolume.mounthPath }}
            {{- end }}
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- if eq "string" (printf "%T" .Values.extraVolumeMounts) }}
{{ tpl .Values.extraVolumeMounts . | indent 12 }}
            {{- else }}
{{ toYaml .Values.extraVolumeMounts | indent 12 }}
            {{- end }}
            {{- end }}
            {{- range .Values.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe: {{- omit .Values.startupProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
      {{- if .Values.extraContainers }}
      {{- toYaml .Values.extraContainers | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.ephemeralVolume.enabled }}
        - name: {{ .Values.ephemeralVolume.name }}
          emptyDir: { }
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            {{- if .Values.persistence.existingClaim }}
            claimName: {{ .Values.persistence.existingClaim }}
            {{- else }}
            claimName: {{ include "common.fullname" . }}
            {{- end }}
        {{- end }}
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- if eq "string" (printf "%T" .Values.extraVolumes) }}
{{ tpl .Values.extraVolumes . | indent 8 }}
        {{- else }}
{{ toYaml .Values.extraVolumes | indent 8 }}
        {{- end }}
        {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}